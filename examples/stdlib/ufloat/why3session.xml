<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC5" version="1.0.5" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.12.2" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.5.4" alternative="FPA" timelimit="5" steplimit="0" memlimit="2000"/>
<prover id="5" name="CVC5" version="1.2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="7" name="Alt-Ergo" version="2.6.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name=".."/><path name=".."/><path name="stdlib"/>
<path name="ufloat.mlw"/>
<theory name="UFloat">
 <goal name="uadd&#39;vc" expl="VC for uadd">
 </goal>
 <goal name="uadd_zero&#39;vc" expl="VC for uadd_zero">
 </goal>
 <goal name="usub&#39;vc" expl="VC for usub">
 </goal>
 <goal name="umul&#39;vc" expl="VC for umul">
 </goal>
 <goal name="udiv&#39;vc" expl="VC for udiv">
 </goal>
 <goal name="uminus&#39;vc" expl="VC for uminus">
 </goal>
 <goal name="udiv_exact&#39;vc" expl="VC for udiv_exact">
 </goal>
 <goal name="infix ++.&#39;vc" expl="VC for infix ++." proved="true">
 <proof prover="1"><result status="valid" time="0.024358" steps="851"/></proof>
 </goal>
 <goal name="infix --.&#39;vc" expl="VC for infix --." proved="true">
 <proof prover="7"><result status="valid" time="0.010908" steps="14"/></proof>
 </goal>
 <goal name="infix **.&#39;vc" expl="VC for infix **." proved="true">
 <proof prover="1"><result status="valid" time="0.030047" steps="1040"/></proof>
 </goal>
 <goal name="infix //.&#39;vc" expl="VC for infix //." proved="true">
 <proof prover="1"><result status="valid" time="0.028845" steps="1288"/></proof>
 </goal>
 <goal name="prefix --.&#39;vc" expl="VC for prefix --." proved="true">
 <proof prover="1"><result status="valid" time="0.025762" steps="915"/></proof>
 </goal>
 <goal name="infix ///.&#39;vc" expl="VC for infix ///." proved="true">
 <proof prover="1"><result status="valid" time="0.024867" steps="1766"/></proof>
 </goal>
</theory>
<theory name="HelperLemmas">
 <goal name="div_order_compat&#39;vc" expl="VC for div_order_compat" proved="true">
 <proof prover="2" memlimit="2000"><result status="valid" time="0.056952" steps="11620"/></proof>
 </goal>
 <goal name="div_order_compat2&#39;vc" expl="VC for div_order_compat2" proved="true">
 <proof prover="1"><result status="valid" time="0.025204" steps="4783"/></proof>
 </goal>
 <goal name="mult_err&#39;vc" expl="VC for mult_err" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mult_err&#39;vc.0" expl="assertion" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.025179" steps="4845"/></proof>
  </goal>
  <goal name="mult_err&#39;vc.1" expl="assertion" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.022272" steps="3824"/></proof>
  </goal>
  <goal name="mult_err&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.060416" steps="437"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mult_err_combine&#39;vc" expl="VC for mult_err_combine" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mult_err_combine&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.034251" steps="16"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.029119" steps="16"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.035031" steps="21"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.044134" steps="24"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.038750" steps="28"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.5" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.026271" steps="28"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.028817" steps="33"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.030542" steps="36"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.045189" steps="39"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.9" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.025654" steps="39"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.10" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.038581" steps="45"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.040024" steps="48"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.12" expl="assertion" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="1.173640" steps="99417"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.13" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="mult_err_combine&#39;vc.13.0" expl="assertion" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="1.321966" steps="86765"/></proof>
   </goal>
   <goal name="mult_err_combine&#39;vc.13.1" expl="VC for mult_err_combine" proved="true">
   <proof prover="5"><result status="valid" time="0.669734" steps="126655"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="mult_err_combine&#39;vc.14" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="8.993549" steps="14037"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.098892" steps="172"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="exp_approx_err&#39;vc" expl="VC for exp_approx_err" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="exp_approx_err&#39;vc.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="exp_approx_err&#39;vc.0.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.062346" steps="1467"/></proof>
   </goal>
   <goal name="exp_approx_err&#39;vc.0.1" expl="VC for exp_approx_err" proved="true">
   <proof prover="4"><result status="valid" time="0.018819" steps="11"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="exp_approx_err&#39;vc.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="exp_approx_err&#39;vc.1.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.142400" steps="2405"/></proof>
   </goal>
   <goal name="exp_approx_err&#39;vc.1.1" expl="VC for exp_approx_err" proved="true">
   <proof prover="4"><result status="valid" time="0.028179" steps="13"/></proof>
   </goal>
   <goal name="exp_approx_err&#39;vc.1.2" expl="VC for exp_approx_err" proved="true">
   <proof prover="4"><result status="valid" time="0.041790" steps="96"/></proof>
   </goal>
   <goal name="exp_approx_err&#39;vc.1.3" expl="VC for exp_approx_err" proved="true">
   <proof prover="4"><result status="valid" time="0.030432" steps="15"/></proof>
   </goal>
   <goal name="exp_approx_err&#39;vc.1.4" expl="VC for exp_approx_err" proved="true">
   <proof prover="4"><result status="valid" time="0.963736" steps="11264"/></proof>
   </goal>
   <goal name="exp_approx_err&#39;vc.1.5" expl="VC for exp_approx_err" proved="true">
   <proof prover="4"><result status="valid" time="0.027380" steps="18"/></proof>
   </goal>
   <goal name="exp_approx_err&#39;vc.1.6" expl="VC for exp_approx_err" proved="true">
   <proof prover="4"><result status="valid" time="0.024855" steps="19"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="exp_approx_err&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="exp_approx_err&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.020912" steps="18"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="log_1_minus_x&#39;vc" expl="VC for log_1_minus_x" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log_1_minus_x&#39;vc.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="1.070601" steps="14082"/></proof>
  </goal>
  <goal name="log_1_minus_x&#39;vc.1" expl="assertion" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.071981" steps="5498"/></proof>
  </goal>
  <goal name="log_1_minus_x&#39;vc.2" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.031199" steps="115"/></proof>
  </goal>
  <goal name="log_1_minus_x&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.047651" steps="434"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log2_1_minus_x&#39;vc" expl="VC for log2_1_minus_x" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log2_1_minus_x&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.031263" steps="63"/></proof>
  </goal>
  <goal name="log2_1_minus_x&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.032803" steps="61"/></proof>
  </goal>
  <goal name="log2_1_minus_x&#39;vc.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.030379" steps="49"/></proof>
  </goal>
  <goal name="log2_1_minus_x&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.030379" steps="156"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log10_1_minus_x&#39;vc" expl="VC for log10_1_minus_x" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log10_1_minus_x&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.032477" steps="63"/></proof>
  </goal>
  <goal name="log10_1_minus_x&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.033661" steps="54"/></proof>
  </goal>
  <goal name="log10_1_minus_x&#39;vc.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.031009" steps="49"/></proof>
  </goal>
  <goal name="log10_1_minus_x&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.033661" steps="133"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log_approx_err&#39;vc" expl="VC for log_approx_err" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log_approx_err&#39;vc.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="1.939729" steps="22506"/></proof>
  </goal>
  <goal name="log_approx_err&#39;vc.1" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.091371" steps="583"/></proof>
  </goal>
  <goal name="log_approx_err&#39;vc.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.077947" steps="52"/></proof>
  </goal>
  <goal name="log_approx_err&#39;vc.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.077798" steps="420"/></proof>
  </goal>
  <goal name="log_approx_err&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.077798" steps="822"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log2_approx_err&#39;vc" expl="VC for log2_approx_err" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log2_approx_err&#39;vc.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="1.506043" steps="22512"/></proof>
  </goal>
  <goal name="log2_approx_err&#39;vc.1" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.054623" steps="522"/></proof>
  </goal>
  <goal name="log2_approx_err&#39;vc.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.068944" steps="52"/></proof>
  </goal>
  <goal name="log2_approx_err&#39;vc.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.068944" steps="407"/></proof>
  </goal>
  <goal name="log2_approx_err&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="5.100000" steps="31555"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log10_approx_err&#39;vc" expl="VC for log10_approx_err" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log10_approx_err&#39;vc.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="1.580697" steps="22506"/></proof>
  </goal>
  <goal name="log10_approx_err&#39;vc.1" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.054493" steps="522"/></proof>
  </goal>
  <goal name="log10_approx_err&#39;vc.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.059677" steps="52"/></proof>
  </goal>
  <goal name="log10_approx_err&#39;vc.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.059677" steps="407"/></proof>
  </goal>
  <goal name="log10_approx_err&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="4.726068" steps="32077"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sin_of_approx">
 </goal>
 <goal name="cos_of_approx">
 </goal>
 <goal name="sum_approx_err&#39;vc" expl="VC for sum_approx_err" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_approx_err&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.023473" steps="28"/></proof>
  </goal>
  <goal name="sum_approx_err&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.023039" steps="28"/></proof>
  </goal>
  <goal name="sum_approx_err&#39;vc.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.023202" steps="344"/></proof>
  </goal>
  <goal name="sum_approx_err&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="3.714687" steps="22199"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="USingleLemmas">
 <goal name="uadd_single_error_propagation&#39;vc" expl="VC for uadd_single_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="uadd_single_error_propagation&#39;vc.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="uadd_single_error_propagation&#39;vc.0.0" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.065846" steps="279"/></proof>
   </goal>
   <goal name="uadd_single_error_propagation&#39;vc.0.1" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.088333" steps="388"/></proof>
   </goal>
   <goal name="uadd_single_error_propagation&#39;vc.0.2" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.053945" steps="4896"/></proof>
   </goal>
   <goal name="uadd_single_error_propagation&#39;vc.0.3" expl="VC for uadd_single_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.053833" steps="225"/></proof>
   </goal>
   <goal name="uadd_single_error_propagation&#39;vc.0.4" expl="VC for uadd_single_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.040795" steps="128"/></proof>
   </goal>
   <goal name="uadd_single_error_propagation&#39;vc.0.5" expl="VC for uadd_single_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.198300" steps="268"/></proof>
   </goal>
   <goal name="uadd_single_error_propagation&#39;vc.0.6" expl="VC for uadd_single_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.046753" steps="144"/></proof>
   </goal>
   <goal name="uadd_single_error_propagation&#39;vc.0.7" expl="VC for uadd_single_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.049453" steps="257"/></proof>
   </goal>
   <goal name="uadd_single_error_propagation&#39;vc.0.8" expl="VC for uadd_single_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.044921" steps="267"/></proof>
   </goal>
   <goal name="uadd_single_error_propagation&#39;vc.0.9" expl="VC for uadd_single_error_propagation" proved="true">
   <proof prover="0"><result status="valid" time="0.124589" steps="28434"/></proof>
   </goal>
   <goal name="uadd_single_error_propagation&#39;vc.0.10" expl="VC for uadd_single_error_propagation" proved="true">
   <proof prover="1"><result status="valid" time="0.051085" steps="4674"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="uadd_single_error_propagation&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="uadd_single_error_propagation&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.043309" steps="4811"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="usub_single_error_propagation&#39;vc" expl="VC for usub_single_error_propagation" proved="true">
 <proof prover="7"><result status="valid" time="0.065895" steps="244"/></proof>
 </goal>
 <goal name="umul_single_error_propagation&#39;vc" expl="VC for umul_single_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="umul_single_error_propagation&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.620011" steps="55015"/></proof>
  </goal>
  <goal name="umul_single_error_propagation&#39;vc.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="umul_single_error_propagation&#39;vc.1.0" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.353321" steps="1548"/></proof>
   </goal>
   <goal name="umul_single_error_propagation&#39;vc.1.1" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.041799" steps="123"/></proof>
   </goal>
   <goal name="umul_single_error_propagation&#39;vc.1.2" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.335921" steps="1675"/></proof>
   </goal>
   <goal name="umul_single_error_propagation&#39;vc.1.3" expl="VC for umul_single_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.158355" steps="321"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="umul_single_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.047140" steps="7816"/></proof>
  </goal>
  <goal name="umul_single_error_propagation&#39;vc.3" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.036290" steps="117"/></proof>
  </goal>
  <goal name="umul_single_error_propagation&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.054232" steps="7822"/></proof>
  </goal>
  <goal name="umul_single_error_propagation&#39;vc.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.024346" steps="3169"/></proof>
  </goal>
  <goal name="umul_single_error_propagation&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.054487" steps="7828"/></proof>
  </goal>
  <goal name="umul_single_error_propagation&#39;vc.7" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.023863" steps="128"/></proof>
  </goal>
  <goal name="umul_single_error_propagation&#39;vc.8" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.024299" steps="3222"/></proof>
  </goal>
  <goal name="umul_single_error_propagation&#39;vc.9" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020124" steps="3245"/></proof>
  </goal>
  <goal name="umul_single_error_propagation&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.065856" steps="9531"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log_single_error_propagation&#39;vc" expl="VC for log_single_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log_single_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.030742" steps="105"/></proof>
  </goal>
  <goal name="log_single_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.072113" steps="4651"/></proof>
  </goal>
  <goal name="log_single_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.056877" steps="7356"/></proof>
  </goal>
  <goal name="log_single_error_propagation&#39;vc.3" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="0.265965" steps="1225"/></proof>
  </goal>
  <goal name="log_single_error_propagation&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.065127" steps="8647"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log2_single_error_propagation&#39;vc" expl="VC for log2_single_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log2_single_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.075456" steps="4660"/></proof>
  </goal>
  <goal name="log2_single_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.016106" steps="2939"/></proof>
  </goal>
  <goal name="log2_single_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.051677" steps="7434"/></proof>
  </goal>
  <goal name="log2_single_error_propagation&#39;vc.3" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="0.243122" steps="1288"/></proof>
  </goal>
  <goal name="log2_single_error_propagation&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.070284" steps="9152"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log10_single_error_propagation&#39;vc" expl="VC for log10_single_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log10_single_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.080282" steps="4660"/></proof>
  </goal>
  <goal name="log10_single_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.029792" steps="99"/></proof>
  </goal>
  <goal name="log10_single_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.027946" steps="4894"/></proof>
  </goal>
  <goal name="log10_single_error_propagation&#39;vc.3" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="0.264571" steps="1269"/></proof>
  </goal>
  <goal name="log10_single_error_propagation&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.207683" steps="397"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="exp_single_error_propagation&#39;vc" expl="VC for exp_single_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="exp_single_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.019700" steps="2833"/></proof>
  </goal>
  <goal name="exp_single_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.033220" steps="96"/></proof>
  </goal>
  <goal name="exp_single_error_propagation&#39;vc.2" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="exp_single_error_propagation&#39;vc.2.0" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.257548" steps="810"/></proof>
   </goal>
   <goal name="exp_single_error_propagation&#39;vc.2.1" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.073628" steps="7935"/></proof>
   </goal>
   <goal name="exp_single_error_propagation&#39;vc.2.2" expl="VC for exp_single_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.033526" steps="101"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="exp_single_error_propagation&#39;vc.3" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="exp_single_error_propagation&#39;vc.3.0" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.079925" steps="8027"/></proof>
   </goal>
   <goal name="exp_single_error_propagation&#39;vc.3.1" expl="VC for exp_single_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.410489" steps="1342"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="exp_single_error_propagation&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.740842" steps="2745"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sin_single_error_propagation&#39;vc" expl="VC for sin_single_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_single_error_propagation&#39;vc.0" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="0.577590" steps="1702"/></proof>
  </goal>
  <goal name="sin_single_error_propagation&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.819090" steps="3878"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cos_single_error_propagation&#39;vc" expl="VC for cos_single_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_single_error_propagation&#39;vc.0" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="0.467923" steps="1709"/></proof>
  </goal>
  <goal name="cos_single_error_propagation&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.019409" steps="3825"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sum_single_error_propagation&#39;vc" expl="VC for sum_single_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_single_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.072000" steps="7568"/></proof>
  </goal>
  <goal name="sum_single_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.078137" steps="649"/></proof>
  </goal>
  <goal name="sum_single_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.031816" steps="93"/></proof>
  </goal>
  <goal name="sum_single_error_propagation&#39;vc.3" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.072476" steps="508"/></proof>
  </goal>
  <goal name="sum_single_error_propagation&#39;vc.4" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="1.610903" steps="6442"/></proof>
  </goal>
  <goal name="sum_single_error_propagation&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.062887" steps="170"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="udiv_exact_single_error_propagation&#39;vc" expl="VC for udiv_exact_single_error_propagation">
 <transf name="split_vc" >
  <goal name="udiv_exact_single_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.085465" steps="8329"/></proof>
  </goal>
  <goal name="udiv_exact_single_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.026231" steps="99"/></proof>
  </goal>
  <goal name="udiv_exact_single_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.098518" steps="8614"/></proof>
  </goal>
  <goal name="udiv_exact_single_error_propagation&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.065265" steps="8007"/></proof>
  </goal>
  <goal name="udiv_exact_single_error_propagation&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="5.699783" steps="74793"/></proof>
  </goal>
  <goal name="udiv_exact_single_error_propagation&#39;vc.5" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.035623" steps="117"/></proof>
  </goal>
  <goal name="udiv_exact_single_error_propagation&#39;vc.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.012260" steps="3119"/></proof>
  </goal>
  <goal name="udiv_exact_single_error_propagation&#39;vc.7" expl="assertion">
  <transf name="split_vc" >
   <goal name="udiv_exact_single_error_propagation&#39;vc.7.0" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.267638" steps="2054"/></proof>
   </goal>
   <goal name="udiv_exact_single_error_propagation&#39;vc.7.1" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.047200" steps="229"/></proof>
   </goal>
   <goal name="udiv_exact_single_error_propagation&#39;vc.7.2" expl="assertion">
   </goal>
   <goal name="udiv_exact_single_error_propagation&#39;vc.7.3" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.309642" steps="2535"/></proof>
   </goal>
   <goal name="udiv_exact_single_error_propagation&#39;vc.7.4" expl="VC for udiv_exact_single_error_propagation" proved="true">
   <proof prover="1"><result status="valid" time="0.089189" steps="10170"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="udiv_exact_single_error_propagation&#39;vc.8" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="udiv_exact_single_error_propagation&#39;vc.8.0" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.294115" steps="1896"/></proof>
   </goal>
   <goal name="udiv_exact_single_error_propagation&#39;vc.8.1" expl="VC for udiv_exact_single_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="5.389557" steps="85897"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="udiv_exact_single_error_propagation&#39;vc.9" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.031495" steps="227"/></proof>
  </goal>
  <goal name="udiv_exact_single_error_propagation&#39;vc.10" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.031882" steps="180"/></proof>
  </goal>
  <goal name="udiv_exact_single_error_propagation&#39;vc.11" expl="postcondition">
  </goal>
  <goal name="udiv_exact_single_error_propagation&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.060849" steps="277"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="UDoubleLemmas">
 <goal name="uadd_double_error_propagation&#39;vc" expl="VC for uadd_double_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="uadd_double_error_propagation&#39;vc.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="uadd_double_error_propagation&#39;vc.0.0" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.065615" steps="285"/></proof>
   </goal>
   <goal name="uadd_double_error_propagation&#39;vc.0.1" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.205519" steps="403"/></proof>
   </goal>
   <goal name="uadd_double_error_propagation&#39;vc.0.2" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.047728" steps="4896"/></proof>
   </goal>
   <goal name="uadd_double_error_propagation&#39;vc.0.3" expl="VC for uadd_double_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.199606" steps="225"/></proof>
   </goal>
   <goal name="uadd_double_error_propagation&#39;vc.0.4" expl="VC for uadd_double_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.034273" steps="128"/></proof>
   </goal>
   <goal name="uadd_double_error_propagation&#39;vc.0.5" expl="VC for uadd_double_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.212201" steps="236"/></proof>
   </goal>
   <goal name="uadd_double_error_propagation&#39;vc.0.6" expl="VC for uadd_double_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.163460" steps="144"/></proof>
   </goal>
   <goal name="uadd_double_error_propagation&#39;vc.0.7" expl="VC for uadd_double_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.052624" steps="257"/></proof>
   </goal>
   <goal name="uadd_double_error_propagation&#39;vc.0.8" expl="VC for uadd_double_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.043572" steps="267"/></proof>
   </goal>
   <goal name="uadd_double_error_propagation&#39;vc.0.9" expl="VC for uadd_double_error_propagation" proved="true">
   <proof prover="0" memlimit="2000"><result status="valid" time="0.148415" steps="28434"/></proof>
   </goal>
   <goal name="uadd_double_error_propagation&#39;vc.0.10" expl="VC for uadd_double_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.052619" steps="186"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="uadd_double_error_propagation&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.046754" steps="4811"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="usub_double_error_propagation&#39;vc" expl="VC for usub_double_error_propagation" proved="true">
 <proof prover="7"><result status="valid" time="0.070154" steps="244"/></proof>
 </goal>
 <goal name="umul_double_error_propagation&#39;vc" expl="VC for umul_double_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="umul_double_error_propagation&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.350846" steps="55015"/></proof>
  </goal>
  <goal name="umul_double_error_propagation&#39;vc.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="umul_double_error_propagation&#39;vc.1.0" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.615451" steps="1544"/></proof>
   </goal>
   <goal name="umul_double_error_propagation&#39;vc.1.1" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.051025" steps="7745"/></proof>
   </goal>
   <goal name="umul_double_error_propagation&#39;vc.1.2" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.267290" steps="1683"/></proof>
   </goal>
   <goal name="umul_double_error_propagation&#39;vc.1.3" expl="VC for umul_double_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.059314" steps="321"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="umul_double_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.024702" steps="3154"/></proof>
  </goal>
  <goal name="umul_double_error_propagation&#39;vc.3" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.035006" steps="117"/></proof>
  </goal>
  <goal name="umul_double_error_propagation&#39;vc.4" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.030918" steps="117"/></proof>
  </goal>
  <goal name="umul_double_error_propagation&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.076954" steps="5016"/></proof>
  </goal>
  <goal name="umul_double_error_propagation&#39;vc.6" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.037888" steps="125"/></proof>
  </goal>
  <goal name="umul_double_error_propagation&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.067551" steps="5018"/></proof>
  </goal>
  <goal name="umul_double_error_propagation&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.043106" steps="7834"/></proof>
  </goal>
  <goal name="umul_double_error_propagation&#39;vc.9" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.011842" steps="3245"/></proof>
  </goal>
  <goal name="umul_double_error_propagation&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.075694" steps="9531"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log_double_error_propagation&#39;vc" expl="VC for log_double_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log_double_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.049909" steps="7333"/></proof>
  </goal>
  <goal name="log_double_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.034036" steps="99"/></proof>
  </goal>
  <goal name="log_double_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.024485" steps="99"/></proof>
  </goal>
  <goal name="log_double_error_propagation&#39;vc.3" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="0.116252" steps="1236"/></proof>
  </goal>
  <goal name="log_double_error_propagation&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.070137" steps="8647"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log2_double_error_propagation&#39;vc" expl="VC for log2_double_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log2_double_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.033275" steps="105"/></proof>
  </goal>
  <goal name="log2_double_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.072523" steps="4662"/></proof>
  </goal>
  <goal name="log2_double_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.071876" steps="4676"/></proof>
  </goal>
  <goal name="log2_double_error_propagation&#39;vc.3" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="0.283422" steps="1283"/></proof>
  </goal>
  <goal name="log2_double_error_propagation&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.074633" steps="9152"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log2_double_error_propagation_simple&#39;vc" expl="VC for log2_double_error_propagation_simple" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log2_double_error_propagation_simple&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.053338" steps="3826"/></proof>
  </goal>
  <goal name="log2_double_error_propagation_simple&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.028971" steps="3836"/></proof>
  </goal>
  <goal name="log2_double_error_propagation_simple&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.041801" steps="3842"/></proof>
  </goal>
  <goal name="log2_double_error_propagation_simple&#39;vc.3" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.878087" steps="10286"/></proof>
  </goal>
  <goal name="log2_double_error_propagation_simple&#39;vc.4" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.036357" steps="103"/></proof>
  </goal>
  <goal name="log2_double_error_propagation_simple&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.327598" steps="2919"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log10_double_error_propagation&#39;vc" expl="VC for log10_double_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log10_double_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.081117" steps="4660"/></proof>
  </goal>
  <goal name="log10_double_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.027968" steps="99"/></proof>
  </goal>
  <goal name="log10_double_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.078272" steps="4676"/></proof>
  </goal>
  <goal name="log10_double_error_propagation&#39;vc.3" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="0.258312" steps="1294"/></proof>
  </goal>
  <goal name="log10_double_error_propagation&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.077372" steps="9152"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="exp_double_error_propagation&#39;vc" expl="VC for exp_double_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="exp_double_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.084597" steps="4592"/></proof>
  </goal>
  <goal name="exp_double_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.024012" steps="2838"/></proof>
  </goal>
  <goal name="exp_double_error_propagation&#39;vc.2" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="exp_double_error_propagation&#39;vc.2.0" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.247218" steps="820"/></proof>
   </goal>
   <goal name="exp_double_error_propagation&#39;vc.2.1" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.034784" steps="124"/></proof>
   </goal>
   <goal name="exp_double_error_propagation&#39;vc.2.2" expl="VC for exp_double_error_propagation" proved="true">
   <proof prover="1"><result status="valid" time="0.060835" steps="8052"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="exp_double_error_propagation&#39;vc.3" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="exp_double_error_propagation&#39;vc.3.0" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.041928" steps="130"/></proof>
   </goal>
   <goal name="exp_double_error_propagation&#39;vc.3.1" expl="VC for exp_double_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.457099" steps="1343"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="exp_double_error_propagation&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.792407" steps="2492"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sin_double_error_propagation&#39;vc" expl="VC for sin_double_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_double_error_propagation&#39;vc.0" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="0.311919" steps="1708"/></proof>
  </goal>
  <goal name="sin_double_error_propagation&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.867006" steps="3848"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cos_double_error_propagation&#39;vc" expl="VC for cos_double_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_double_error_propagation&#39;vc.0" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="0.493623" steps="1702"/></proof>
  </goal>
  <goal name="cos_double_error_propagation&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.777855" steps="3854"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sum_double_error_propagation&#39;vc" expl="VC for sum_double_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_double_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.055005" steps="7568"/></proof>
  </goal>
  <goal name="sum_double_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.137719" steps="17570"/></proof>
  </goal>
  <goal name="sum_double_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.059527" steps="7700"/></proof>
  </goal>
  <goal name="sum_double_error_propagation&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.161644" steps="17967"/></proof>
  </goal>
  <goal name="sum_double_error_propagation&#39;vc.4" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="1.015987" steps="6364"/></proof>
  </goal>
  <goal name="sum_double_error_propagation&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.091479" steps="8686"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="udiv_exact_double_error_propagation&#39;vc" expl="VC for udiv_exact_double_error_propagation">
 <transf name="split_vc" >
  <goal name="udiv_exact_double_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.072173" steps="8329"/></proof>
  </goal>
  <goal name="udiv_exact_double_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.031527" steps="99"/></proof>
  </goal>
  <goal name="udiv_exact_double_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.083986" steps="8614"/></proof>
  </goal>
  <goal name="udiv_exact_double_error_propagation&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.057582" steps="8007"/></proof>
  </goal>
  <goal name="udiv_exact_double_error_propagation&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="4.717592" steps="75117"/></proof>
  </goal>
  <goal name="udiv_exact_double_error_propagation&#39;vc.5" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.032211" steps="114"/></proof>
  </goal>
  <goal name="udiv_exact_double_error_propagation&#39;vc.6" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.031140" steps="108"/></proof>
  </goal>
  <goal name="udiv_exact_double_error_propagation&#39;vc.7" expl="assertion">
  </goal>
  <goal name="udiv_exact_double_error_propagation&#39;vc.8" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="udiv_exact_double_error_propagation&#39;vc.8.0" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.265745" steps="1894"/></proof>
   </goal>
   <goal name="udiv_exact_double_error_propagation&#39;vc.8.1" expl="VC for udiv_exact_double_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="3.756661" steps="85681"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="udiv_exact_double_error_propagation&#39;vc.9" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.032878" steps="227"/></proof>
  </goal>
  <goal name="udiv_exact_double_error_propagation&#39;vc.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.066760" steps="8887"/></proof>
  </goal>
  <goal name="udiv_exact_double_error_propagation&#39;vc.11" expl="postcondition">
  </goal>
  <goal name="udiv_exact_double_error_propagation&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.071989" steps="279"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
